Step 1: Refactor Java code
- do not use: in, ref, out, object
- do not use attribute names equals method names
- do not use public visiblity keyword for methods in interfaces

--
* return null => return default(TYPE)
* in => inJ
* System => SystemJ
* out => outJ
* base => baseJ
* package => namespace
* fullqualified classnames
* super. => base. (Methods)
* super () => : base () (Constructor definition)
* this () => : this (Constructor call)
* ??? method comments
* first declared methods need to be declared as virtual
* override methods need to be declared as override!
* constants keyword final for classes => sealed
* constents keyword final for properties = readonly
* lock => lockJ
* array specifier need to be before name
* Array.length => Array.Length
* right unsigned shift: user class dotnet.lang.Operator
* ClassCastException => InvalidCastException
* InstantiationException => MemberAccessException
* IllegalAccessException => MethodAccessException
* break <label> => goto <label>
* Multidim. Arrays [][] => [][]
* Octal char inits '\012' => Unicode (Dezimal) '\u0010'
* char x = 0x00c7 => char u = '\u00c7'

--

Problems: 
* C# using same names like Java for namespaces and classes like System, Math and String
* Java int != C# int (?)
* C# doesn't support properties with same name like methods